{"version":3,"sources":["store/actions.js","components/Timer.jsx","store/reducers.js","components/TaskNameInput.jsx","components/StartStopButton.jsx","components/RemoveButton.jsx","components/ScoreTable.jsx","components/MainComponent.jsx","components/ScoreItem.jsx","components/Root.jsx","index.js"],"names":["CHANGE_TIMER","GET_TASK_NAME","CHANGE_SECONDS","RESET_COUNT","REMOVE_ITEM","changeTimer","type","inputTaskName","newTaskName","payload","changeSecondsCount","resetCount","removeItem","id","Timer","this","props","isTimerWorking","seconds","setTimeout","setImmediate","showMinutes","parseInt","showSeconds","React","Component","mapDispatchToProps","connect","state","initialState","localStorage","JSON","parse","attentionBanner","startTime","hours","minutes","startMoment","taskNameInput","doneTasks","className","onSubmit","TextField","label","value","onChange","e","target","disabled","StartStopButton","action","Button","variant","color","onClick","ScoreTable","data","style","length","display","map","elem","key","indexOf","to","name","stopTime","duration","MainComponent","window","addEventListener","store","setItem","stringify","getState","match","params","find","class","Root","basename","exact","path","component","ScoreItem","createStore","Date","getHours","getMinutes","now","toFixed","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b02f5dbb.chunk.js","sourcesContent":["export const CHANGE_TIMER = 'CHANGE_TIMER'\nexport const GET_TASK_NAME = 'GET_TASK_NAME'\nexport const CHANGE_SECONDS = 'CHANGE_SECONDS'\nexport const RESET_COUNT = 'RESET_COUNT'\nexport const REMOVE_ITEM = 'REMOVE_ITEM'\n\nexport const changeTimer = () => ( {type: CHANGE_TIMER } )\nexport const inputTaskName = newTaskName => ( {type: GET_TASK_NAME, payload: newTaskName} )\nexport const changeSecondsCount = () => ( {type: CHANGE_SECONDS} )\nexport const resetCount = () => ( {type: RESET_COUNT} )\nexport const removeItem = id => ( {type: REMOVE_ITEM, payload: id} )","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeSecondsCount, resetCount } from '../store/actions'\n\nclass Timer extends React.Component{\n    componentDidMount(){\n        this.props.changeSecondsCount()\n    }\n    render(){\n        const {isTimerWorking, seconds, changeSecondsCount, resetCount} = this.props\n        if(isTimerWorking){\n            setTimeout(() => changeSecondsCount(), 1000)\n        } else if(seconds){\n            setImmediate(() => resetCount())\n        }\n        const showMinutes = parseInt(parseInt(seconds)/60)\n        const showSeconds = parseInt(seconds) % 60\n        return(\n            <div id=\"clock\">       \n                {(showMinutes < 10) ? `0${showMinutes}` : showMinutes}:{(showSeconds < 10) ? `0${showSeconds}` : showSeconds}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isTimerWorking: state.isTimerWorking,\n        seconds: state.seconds,\n    }\n}\n\nconst mapDispatchToProps = { \n    changeSecondsCount,\n    resetCount\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)","import { CHANGE_TIMER, GET_TASK_NAME, CHANGE_SECONDS, RESET_COUNT, REMOVE_ITEM } from './actions.js'\n\nlet initialState\n\nif(localStorage['redux-store']){\n    initialState = JSON.parse(localStorage['redux-store'])\n} else {\n    initialState = {\n        isTimerWorking: false,\n        attentionBanner: false,\n        seconds: 0,\n        startTime: {\n            hours: null,\n            minutes: null,\n        },\n        startMoment: null,\n        taskNameInput: '',\n        doneTasks: []\n    }\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch(action.type){\n        case CHANGE_TIMER: \n            return {...state, isTimerWorking: !!state.taskNameInput ? !state.isTimerWorking : state.isTimerWorking,\n                attentionBanner: !state.taskNameInput,\n                startTime: {\n                    hours: !state.isTimerWorking ? new Date().getHours() : null,\n                    minutes: !state.isTimerWorking ? new Date().getMinutes() : null,\n                },\n                startMoment: !state.isTimerWorking ? Date.now() : null,\n                taskNameInput: state.isTimerWorking ? '' : state.taskNameInput,\n                doneTasks: state.isTimerWorking ? [...state.doneTasks, {\n                    id: Date.now(),\n                    name: state.taskNameInput,\n                    startTime: state.startTime,\n                    stopTime: {\n                        hours: new Date().getHours(),\n                        minutes: new Date().getMinutes(),\n                    },\n                    duration: ((Date.now() - state.startMoment)/1000).toFixed(1)\n                }] : [...state.doneTasks]\n            }\n        case GET_TASK_NAME:\n            return {...state, taskNameInput: action.payload}\n        case CHANGE_SECONDS:\n            return {...state, seconds: state.startMoment ? parseInt((Date.now() - state.startMoment)/1000) : 0}\n        case RESET_COUNT:\n            return {...state, seconds: 0}\n        case REMOVE_ITEM:\n            return {...state, doneTasks: state.doneTasks.filter(elem => elem.id !== action.payload)}\n        default: \n            return state\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeTimer, inputTaskName } from '../store/actions'\nimport TextField from '@material-ui/core/TextField'\n\nconst TaskNameInput = props => {\n    const {\n        isTimerWorking,\n        attentionBanner,\n        taskNameInput,\n        changeTimer,\n        inputTaskName\n    } = props\n    return(\n        <>\n            <div className={'inputTaskTrue'}>\n                <form onSubmit={changeTimer}>\n                    <TextField \n                        id=\"standard-basic\" \n                        label=\"Enter task name\"\n                        value={taskNameInput}\n                        onChange={e => inputTaskName(e.target.value)}\n                        disabled={isTimerWorking}\n                    />\n                </form>\n            </div>\n            {attentionBanner ? <div id=\"attentionBanner\">Enter your task name!</div> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isTimerWorking: state.isTimerWorking,\n        attentionBanner: state.attentionBanner,\n        taskNameInput: state.taskNameInput,\n    }\n}\n\nconst mapDispatchToProps = { \n    changeTimer, \n    inputTaskName, \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskNameInput)","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nexport const StartStopButton = ({ action }) => <div id=\"task-btn\"><Button variant=\"contained\" color=\"primary\" onClick={action}>Start/Stop</Button></div>","import React from 'react'\nimport { connect } from 'react-redux'\nimport { removeItem } from '../store/actions'\n\nconst RemoveButton = ({ id, removeItem }) => {\n    return(\n        <button className=\"removeButton\" onClick={() => removeItem(id)}>&times;</button>\n    )\n}\n\nconst mapDispatchToProps = { \n    removeItem\n}\n\nexport default connect(null, mapDispatchToProps)(RemoveButton)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport RemoveButton from './RemoveButton'\n\nexport const ScoreTable = ({ data }) => {\n    return(\n        <table style={data.length ? {} : {display: 'none'}}>\n            <thead>\n                <tr className=\"headRow\">\n                    <th>№</th>\n                    <th>Id</th>\n                    <th>Task name</th>\n                    <th>Start time</th>\n                    <th>Stop time</th>\n                    <th>Duration</th>\n                </tr>\n            </thead>\n            <tbody>\n                {data.map(elem => \n                    <tr key={elem.id} className=\"hoverRows\">\n                        <td>{data.indexOf(elem) + 1}</td>\n                        <td>{elem.id}</td>\n                        <td><div className=\"wrapperTableItem\"><Link className=\"itemRoute\" to={`/id${elem.id}`}>{elem.name}</Link><RemoveButton id={elem.id} /></div></td>\n                        <td>{(elem.startTime.hours < 10) ? `0${elem.startTime.hours}` : elem.startTime.hours}:{(elem.startTime.minutes < 10) ? `0${elem.startTime.minutes}` : elem.startTime.minutes}</td>\n                        <td>{(elem.stopTime.hours < 10) ? `0${elem.stopTime.hours}` : elem.stopTime.hours}:{(elem.stopTime.minutes < 10) ? `0${elem.stopTime.minutes}` : elem.stopTime.minutes}</td>\n                        <td>{elem.duration}s</td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    )\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport { changeTimer } from '../store/actions'\nimport Timer from './Timer';\nimport TaskNameInput from './TaskNameInput';\nimport { StartStopButton } from './StartStopButton';\nimport { ScoreTable } from './ScoreTable';\nimport { store } from '../index'\n\nclass MainComponent extends React.Component{\n    render(){\n        const { \n            doneTasks,\n            changeTimer\n        } = this.props\n\n        return(\n            <div id=\"wrapper\">\n                <Timer />\n                <TaskNameInput />\n                <StartStopButton action={changeTimer} />\n                <ScoreTable data={doneTasks} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        doneTasks: state.doneTasks,\n    }\n}\n\nconst mapDispatchToProps = { \n    changeTimer\n}\n\nconst setStateToLocalStorage = store => {\n    localStorage.setItem('redux-store', JSON.stringify(store.getState()))\n}\n\nwindow.addEventListener('beforeunload', () => setStateToLocalStorage(store))\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\n\nconst ScoreItem = ( {doneTasks, match: {params: {id}}} ) => {\n    const elem = doneTasks.find(elem => `id${elem.id}` === id)\n    if(elem){\n        return(\n            <>\n                <table className=\"tableTrue\">\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Task name</th>\n                            <th>Start time</th>\n                            <th>Stop time</th>\n                            <th>Duration</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{elem.id}</td>\n                            <td>{elem.name}</td>\n                            <td>{elem.startTime.hours < 10 ? `0${elem.startTime.hours}` : elem.startTime.hours}:{elem.startTime.minutes < 10 ? `0${elem.startTime.minutes}` : elem.startTime.minutes}</td>\n                            <td>{elem.stopTime.hours < 10 ? `0${elem.stopTime.hours}` : elem.stopTime.hours}:{elem.stopTime.minutes < 10 ? `0${elem.stopTime.minutes}` : elem.stopTime.minutes}</td>\n                            <td>{elem.duration}s</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class=\"return\"><Link id=\"return-to-main\" to={`/`}><Button id =\"startStopButton\" variant=\"contained\" color=\"primary\">Back to main page</Button></Link></div>\n                \n            </>\n        )\n    } else return(\n        <>\n            <div id=\"error\">404 Not Found :(</div>\n            <hr/>\n        </>\n    )\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        doneTasks: state.doneTasks\n    }\n}\n\nexport default connect(mapStateToProps)(ScoreItem)","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport MainComponent from \"./MainComponent\";\nimport ScoreItem from \"./ScoreItem\";\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <Route exact path=\"/\" component={MainComponent} />\n      <Route path=\"/:id\" component={ScoreItem} />\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { reducer } from './store/reducers'\nimport { createStore } from 'redux'\nimport Root from './components/Root';\n\nexport const store = createStore(reducer)\n\nReactDOM.render(<Root store={store} />, document.getElementById('root'));"],"sourceRoot":""}